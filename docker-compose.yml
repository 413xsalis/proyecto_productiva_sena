version: "3.9"

services:
  web:
    build: ./backend
    container_name: fastapi_app
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app
      - uploads_volume:/app/uploads
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - DEBUG=${DEBUG}
      - ENVIRONMENT=${ENVIRONMENT}
      - PYTHONPATH=${PYTHONPATH}
    command: >
        sh -c "sleep 15 && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    tty: true
    stdin_open: true
    networks:
      - productiva_net
    restart: unless-stopped

  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - --default-authentication-plugin=mysql_native_password
      - --wait-timeout=28800
      - --interactive-timeout=28800
    networks:
      - productiva_net
    healthcheck:  
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - web  
    ports:
      - "${NGINX_PORT}:80"
    networks:
      - productiva_net
    environment:
      - API_URL=${API_URL}

volumes:
  mysql_data:
  uploads_volume:

networks:
  productiva_net:
    driver: bridge